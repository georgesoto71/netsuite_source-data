{% macro get_transactions_columns() %}

{% set columns = [
    {"name": "_fivetran_deleted", "datatype": "boolean"},
    {"name": "_fivetran_synced", "datatype": dbt_utils.type_timestamp()},
    {"name": "account_based_number", "datatype": dbt_utils.type_string()},
    {"name": "accounting_book_id", "datatype": dbt_utils.type_float()},
    {"name": "accounting_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "accounting_period_id", "datatype": dbt_utils.type_float()},
    {"name": "accounts_email", "datatype": dbt_utils.type_string()},
    {"name": "acct_corp_card_expenses_id", "datatype": dbt_utils.type_float()},
    {"name": "adjustment_journal", "datatype": dbt_utils.type_string()},
    {"name": "amount_after_discount", "datatype": dbt_utils.type_float()},
    {"name": "amount_unbilled", "datatype": dbt_utils.type_float()},
    {"name": "ate_process_message", "datatype": dbt_utils.type_string()},
    {"name": "avalara_scis_note_message", "datatype": dbt_utils.type_string()},
    {"name": "avalara_scis_transaction_flag", "datatype": dbt_utils.type_string()},
    {"name": "avalara_status_id", "datatype": dbt_utils.type_float()},
    {"name": "avalara_suspend_tax_call", "datatype": dbt_utils.type_string()},
    {"name": "bill_com_amount", "datatype": dbt_utils.type_float()},
    {"name": "bill_com_bank_account", "datatype": dbt_utils.type_string()},
    {"name": "bill_com_last_updated_by_impo", "datatype": dbt_utils.type_string()},
    {"name": "bill_com_money_movement_type", "datatype": dbt_utils.type_float()},
    {"name": "bill_com_online_sentpay_inf_id", "datatype": dbt_utils.type_float()},
    {"name": "bill_com_paid_bill_updated", "datatype": dbt_utils.type_string()},
    {"name": "bill_com_payment_account_hi_id", "datatype": dbt_utils.type_float()},
    {"name": "bill_pay_transaction", "datatype": dbt_utils.type_string()},
    {"name": "billaddress", "datatype": dbt_utils.type_string()},
    {"name": "billing_account_id", "datatype": dbt_utils.type_float()},
    {"name": "billing_instructions", "datatype": dbt_utils.type_string()},
    {"name": "billing_record_cannot_be_subm", "datatype": dbt_utils.type_string()},
    {"name": "billto_entityuse_code_id", "datatype": dbt_utils.type_float()},
    {"name": "billto_latitude", "datatype": dbt_utils.type_string()},
    {"name": "billto_longitude", "datatype": dbt_utils.type_string()},
    {"name": "buildable", "datatype": dbt_utils.type_float()},
    {"name": "bulk_submission_id", "datatype": dbt_utils.type_float()},
    {"name": "campaign_category_id", "datatype": dbt_utils.type_float()},
    {"name": "carrier", "datatype": dbt_utils.type_string()},
    {"name": "cash_register", "datatype": dbt_utils.type_string()},
    {"name": "celigo_end_user_swap_fieldc_id", "datatype": dbt_utils.type_float()},
    {"name": "celigo_export_count", "datatype": dbt_utils.type_float()},
    {"name": "closed", "datatype": dbt_utils.type_timestamp()},
    {"name": "company_status_id", "datatype": dbt_utils.type_float()},
    {"name": "contract", "datatype": dbt_utils.type_string()},
    {"name": "contract_cost_amount", "datatype": dbt_utils.type_float()},
    {"name": "contract_defer_expense_acct_id", "datatype": dbt_utils.type_float()},
    {"name": "contract_expense_acct_id", "datatype": dbt_utils.type_float()},
    {"name": "contract_expense_src_acct_id", "datatype": dbt_utils.type_float()},
    {"name": "correction_type_id", "datatype": dbt_utils.type_float()},
    {"name": "counterparty_vat_number", "datatype": dbt_utils.type_string()},
    {"name": "country_of_origin", "datatype": dbt_utils.type_string()},
    {"name": "create_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "created_by_id", "datatype": dbt_utils.type_float()},
    {"name": "created_from", "datatype": dbt_utils.type_string()},
    {"name": "created_from_id", "datatype": dbt_utils.type_float()},
    {"name": "currency_id", "datatype": dbt_utils.type_float()},
    {"name": "custom_form_id", "datatype": dbt_utils.type_float()},
    {"name": "customer_email_address", "datatype": dbt_utils.type_string()},
    {"name": "customs_registration_number", "datatype": dbt_utils.type_string()},
    {"name": "date_actual_prod_end", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_actual_prod_start", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_as_of", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_bid_close", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_bid_open", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_contract_cost_accrual", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_deleted", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_last_modified", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_of_taxable_supply", "datatype": dbt_utils.type_timestamp()},
    {"name": "date_tax_point", "datatype": dbt_utils.type_timestamp()},
    {"name": "delivery_terms_id", "datatype": dbt_utils.type_float()},
    {"name": "details_of_subject_and_exem_id", "datatype": dbt_utils.type_float()},
    {"name": "discount_amount", "datatype": dbt_utils.type_float()},
    {"name": "discount_mapping", "datatype": dbt_utils.type_float()},
    {"name": "discount_total_variance", "datatype": dbt_utils.type_float()},
    {"name": "document_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "document_number", "datatype": dbt_utils.type_string()},
    {"name": "due_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "email", "datatype": dbt_utils.type_string()},
    {"name": "email_status_id", "datatype": dbt_utils.type_float()},
    {"name": "end_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "entity_id", "datatype": dbt_utils.type_float()},
    {"name": "entity_tax_reg_num", "datatype": dbt_utils.type_string()},
    {"name": "establishment_code", "datatype": dbt_utils.type_string()},
    {"name": "exchange_rate", "datatype": dbt_utils.type_float()},
    {"name": "expected_close", "datatype": dbt_utils.type_timestamp()},
    {"name": "external_ref_number", "datatype": dbt_utils.type_string()},
    {"name": "external_reference", "datatype": dbt_utils.type_string()},
    {"name": "fax", "datatype": dbt_utils.type_string()},
    {"name": "fob", "datatype": dbt_utils.type_string()},
    {"name": "forecast_type", "datatype": dbt_utils.type_string()},
    {"name": "handling_amount", "datatype": dbt_utils.type_float()},
    {"name": "handling_amount1", "datatype": dbt_utils.type_float()},
    {"name": "import_declaration_no_", "datatype": dbt_utils.type_string()},
    {"name": "import_permit_no_", "datatype": dbt_utils.type_string()},
    {"name": "include_in_forecast", "datatype": dbt_utils.type_string()},
    {"name": "incoterm", "datatype": dbt_utils.type_string()},
    {"name": "intercompany_transaction_id", "datatype": dbt_utils.type_float()},
    {"name": "intracommunity_transaction__id", "datatype": dbt_utils.type_float()},
    {"name": "invoice_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "invoice_email_sent", "datatype": dbt_utils.type_timestamp()},
    {"name": "invoice_messaging", "datatype": dbt_utils.type_string()},
    {"name": "invoice_with_no_counterpart_a", "datatype": dbt_utils.type_string()},
    {"name": "is_actualprodenddate_manual", "datatype": dbt_utils.type_string()},
    {"name": "is_actualprodstartdate_manual", "datatype": dbt_utils.type_string()},
    {"name": "is_advanced_intercompany", "datatype": dbt_utils.type_string()},
    {"name": "is_autocalculate_lag", "datatype": dbt_utils.type_string()},
    {"name": "is_compliant", "datatype": dbt_utils.type_string()},
    {"name": "is_created_from_merge", "datatype": dbt_utils.type_string()},
    {"name": "is_cross_sub_transactions", "datatype": dbt_utils.type_string()},
    {"name": "is_expense_report", "datatype": dbt_utils.type_string()},
    {"name": "is_finance_charge", "datatype": dbt_utils.type_string()},
    {"name": "is_firmed", "datatype": dbt_utils.type_string()},
    {"name": "is_in_transit_payment", "datatype": dbt_utils.type_string()},
    {"name": "is_intercompany", "datatype": dbt_utils.type_string()},
    {"name": "is_merged_into_arrangements", "datatype": dbt_utils.type_string()},
    {"name": "is_non_posting", "datatype": dbt_utils.type_string()},
    {"name": "is_override_installments", "datatype": dbt_utils.type_string()},
    {"name": "is_payment_hold", "datatype": dbt_utils.type_string()},
    {"name": "is_recurring_bill", "datatype": dbt_utils.type_string()},
    {"name": "is_reversal", "datatype": dbt_utils.type_string()},
    {"name": "is_seller_importer_of_record", "datatype": dbt_utils.type_string()},
    {"name": "is_tax_point_date_override", "datatype": dbt_utils.type_string()},
    {"name": "is_tax_reg_override", "datatype": dbt_utils.type_string()},
    {"name": "is_wip", "datatype": dbt_utils.type_string()},
    {"name": "issued_by_third_party", "datatype": dbt_utils.type_string()},
    {"name": "issued_invoice_type_id", "datatype": dbt_utils.type_float()},
    {"name": "item_revision", "datatype": dbt_utils.type_float()},
    {"name": "itr_nexus", "datatype": dbt_utils.type_string()},
    {"name": "job_id", "datatype": dbt_utils.type_float()},
    {"name": "land_registercadaster_referen", "datatype": dbt_utils.type_string()},
    {"name": "landed_cost_allocation_method", "datatype": dbt_utils.type_string()},
    {"name": "last_modified_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "last_sales_activity", "datatype": dbt_utils.type_timestamp()},
    {"name": "lead_source_id", "datatype": dbt_utils.type_float()},
    {"name": "location_id", "datatype": dbt_utils.type_float()},
    {"name": "lsa_link", "datatype": dbt_utils.type_string()},
    {"name": "lsa_link_name", "datatype": dbt_utils.type_string()},
    {"name": "memo", "datatype": dbt_utils.type_string()},
    {"name": "memorized", "datatype": dbt_utils.type_string()},
    {"name": "message", "datatype": dbt_utils.type_string()},
    {"name": "mode_of_transport_id", "datatype": dbt_utils.type_float()},
    {"name": "mx_operation_type_id", "datatype": dbt_utils.type_float()},
    {"name": "nature_of_transaction_code_id", "datatype": dbt_utils.type_float()},
    {"name": "needs_bill", "datatype": dbt_utils.type_string()},
    {"name": "needs_revenue_commitment", "datatype": dbt_utils.type_string()},
    {"name": "nexus_notc_id", "datatype": dbt_utils.type_float()},
    {"name": "ng_asset_elimination_entry", "datatype": dbt_utils.type_string()},
    {"name": "ng_asset_id", "datatype": dbt_utils.type_float()},
    {"name": "ng_asset_ignore_for_capitaliz", "datatype": dbt_utils.type_string()},
    {"name": "ng_asset_schedule_entry_id", "datatype": dbt_utils.type_float()},
    {"name": "ng_asset_task_key", "datatype": dbt_utils.type_string()},
    {"name": "ng_lessee_lease_id", "datatype": dbt_utils.type_float()},
    {"name": "ng_lessee_schedule_entry_id", "datatype": dbt_utils.type_float()},
    {"name": "ng_lessee_task_key", "datatype": dbt_utils.type_string()},
    {"name": "nondeductible_adjustment_jo_id", "datatype": dbt_utils.type_float()},
    {"name": "nondeductible_tax_adjusted", "datatype": dbt_utils.type_string()},
    {"name": "number_of_pricing_tiers", "datatype": dbt_utils.type_float()},
    {"name": "opening_balance_transaction", "datatype": dbt_utils.type_string()},
    {"name": "operation_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "order_total_variance", "datatype": dbt_utils.type_float()},
    {"name": "order_type_id", "datatype": dbt_utils.type_float()},
    {"name": "order_types_id", "datatype": dbt_utils.type_float()},
    {"name": "original_bill_id", "datatype": dbt_utils.type_float()},
    {"name": "original_invoice_id", "datatype": dbt_utils.type_float()},
    {"name": "overdue_reminder_1_sent_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "overdue_reminder_2_sent_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "overdue_reminder_3_sent_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "overdue_reminder_4_sent_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "overdue_reminder_5_sent_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "ownership_transfer_id", "datatype": dbt_utils.type_float()},
    {"name": "packing_list_instructions", "datatype": dbt_utils.type_string()},
    {"name": "paid_via_bill_com", "datatype": dbt_utils.type_string()},
    {"name": "partner_id", "datatype": dbt_utils.type_float()},
    {"name": "pause_email_notifications", "datatype": dbt_utils.type_string()},
    {"name": "payment_terms_id", "datatype": dbt_utils.type_float()},
    {"name": "payment_transaction_id", "datatype": dbt_utils.type_string()},
    {"name": "pick_up", "datatype": dbt_utils.type_string()},
    {"name": "pn_ref_num", "datatype": dbt_utils.type_string()},
    {"name": "probability", "datatype": dbt_utils.type_float()},
    {"name": "product_label_instructions", "datatype": dbt_utils.type_string()},
    {"name": "projected_total", "datatype": dbt_utils.type_float()},
    {"name": "promotion_code_id", "datatype": dbt_utils.type_float()},
    {"name": "promotion_code_instance_id", "datatype": dbt_utils.type_float()},
    {"name": "property_location_id", "datatype": dbt_utils.type_float()},
    {"name": "purchase_order_instructions", "datatype": dbt_utils.type_string()},
    {"name": "purchases_email", "datatype": dbt_utils.type_string()},
    {"name": "quote_id", "datatype": dbt_utils.type_string()},
    {"name": "received_invoice_type_id", "datatype": dbt_utils.type_float()},
    {"name": "reference_no_", "datatype": dbt_utils.type_string()},
    {"name": "reference_no__of_original_inv", "datatype": dbt_utils.type_string()},
    {"name": "regime_code_id", "datatype": dbt_utils.type_float()},
    {"name": "regime_code_of_supply_id", "datatype": dbt_utils.type_float()},
    {"name": "region_of_origin_id", "datatype": dbt_utils.type_float()},
    {"name": "registration_code_id", "datatype": dbt_utils.type_float()},
    {"name": "registration_message", "datatype": dbt_utils.type_string()},
    {"name": "registration_status_id", "datatype": dbt_utils.type_float()},
    {"name": "related_tranid", "datatype": dbt_utils.type_string()},
    {"name": "renewal", "datatype": dbt_utils.type_timestamp()},
    {"name": "report_timestamp", "datatype": dbt_utils.type_string()},
    {"name": "revenue_commitment_status", "datatype": dbt_utils.type_string()},
    {"name": "revenue_committed", "datatype": dbt_utils.type_timestamp()},
    {"name": "revenue_status", "datatype": dbt_utils.type_string()},
    {"name": "reversing_transaction_id", "datatype": dbt_utils.type_float()},
    {"name": "sales_effective_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "sales_rep_id", "datatype": dbt_utils.type_float()},
    {"name": "salesforce_billing_order", "datatype": dbt_utils.type_string()},
    {"name": "salesforce_id", "datatype": dbt_utils.type_string()},
    {"name": "salesforce_order_id", "datatype": dbt_utils.type_string()},
    {"name": "salesforce_quote_id", "datatype": dbt_utils.type_string()},
    {"name": "salesforce_term_in_months", "datatype": dbt_utils.type_float()},
    {"name": "scheduling_method_id", "datatype": dbt_utils.type_string()},
    {"name": "sfdc_invoice_number", "datatype": dbt_utils.type_string()},
    {"name": "ship_total_variance", "datatype": dbt_utils.type_float()},
    {"name": "shipaddress", "datatype": dbt_utils.type_string()},
    {"name": "shipment_received", "datatype": dbt_utils.type_timestamp()},
    {"name": "shipping_amount", "datatype": dbt_utils.type_float()},
    {"name": "shipping_amount1", "datatype": dbt_utils.type_float()},
    {"name": "shipping_code_id", "datatype": dbt_utils.type_float()},
    {"name": "shipping_email", "datatype": dbt_utils.type_string()},
    {"name": "shipping_item_id", "datatype": dbt_utils.type_float()},
    {"name": "shipping_tax_included", "datatype": dbt_utils.type_string()},
    {"name": "shipto_entityuse_code_id", "datatype": dbt_utils.type_float()},
    {"name": "shipto_latitude", "datatype": dbt_utils.type_string()},
    {"name": "shipto_longitude", "datatype": dbt_utils.type_string()},
    {"name": "simplified_invoice_article_7_", "datatype": dbt_utils.type_string()},
    {"name": "source_system_id", "datatype": dbt_utils.type_float()},
    {"name": "special_scheme_code_or_effe__0", "datatype": dbt_utils.type_float()},
    {"name": "special_scheme_code_or_effe_id", "datatype": dbt_utils.type_float()},
    {"name": "start_date", "datatype": dbt_utils.type_timestamp()},
    {"name": "status", "datatype": dbt_utils.type_string()},
    {"name": "stripe_payment_id", "datatype": dbt_utils.type_string()},
    {"name": "stripe_transaction_id", "datatype": dbt_utils.type_string()},
    {"name": "synced_to_salesforce", "datatype": dbt_utils.type_string()},
    {"name": "tax_after_discount", "datatype": dbt_utils.type_float()},
    {"name": "tax_credit", "datatype": dbt_utils.type_float()},
    {"name": "tax_included", "datatype": dbt_utils.type_string()},
    {"name": "tax_override", "datatype": dbt_utils.type_string()},
    {"name": "tax_reg_id", "datatype": dbt_utils.type_float()},
    {"name": "tax_total_variance", "datatype": dbt_utils.type_float()},
    {"name": "title", "datatype": dbt_utils.type_string()},
    {"name": "to_delete_admin_only", "datatype": dbt_utils.type_string()},
    {"name": "total_after_discount", "datatype": dbt_utils.type_float()},
    {"name": "trandate", "datatype": dbt_utils.type_timestamp()},
    {"name": "tranid", "datatype": dbt_utils.type_string()},
    {"name": "trans_is_vsoe_bundle", "datatype": dbt_utils.type_string()},
    {"name": "transaction_extid", "datatype": dbt_utils.type_string()},
    {"name": "transaction_id", "datatype": dbt_utils.type_float()},
    {"name": "transaction_number", "datatype": dbt_utils.type_string()},
    {"name": "transaction_partner", "datatype": dbt_utils.type_string()},
    {"name": "transaction_source", "datatype": dbt_utils.type_string()},
    {"name": "transaction_type", "datatype": dbt_utils.type_string()},
    {"name": "transaction_website", "datatype": dbt_utils.type_float()},
    {"name": "transfer_location", "datatype": dbt_utils.type_float()},
    {"name": "use_item_cost_as_transfer_cost", "datatype": dbt_utils.type_string()},
    {"name": "vendor_id", "datatype": dbt_utils.type_float()},
    {"name": "visible_in_customer_center", "datatype": dbt_utils.type_string()},
    {"name": "weighted_total", "datatype": dbt_utils.type_float()}
] %}

{{ return(columns) }}

{% endmacro %}
